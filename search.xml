<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Escaping with Sun</title>
      <link href="/2020/03/26/escapingwithsun/"/>
      <url>/2020/03/26/escapingwithsun/</url>
      
        <content type="html"><![CDATA[<h3 id="太阳系人类唯一的家园">太阳系——人类唯一的家园</h3><p>太阳系是目前人类可以长期居住的唯一的家园，中心的恒星——太阳为我们提供了充足的能量来源，而地球则是我们长期居住的落脚点。太阳是一颗处于壮年时期的主序星，表面温度<span class="math inline">\(5700K\)</span>，内核通过热核反应不断产生能量，向外输送，最终以光子、中微子等方式将能量传送出去。在这样一个<del>恐怖的火炉</del>巨大的能源中心面前，距离是最关键的因素，这是因为太阳的在单位面积上的辐射能量随着距离的平方递减，意味着较近的地方接受到的辐射异常强烈，而后果则是类似水星的表面温度硬是被加热到了<span class="math inline">\(154^{\circ}C\)</span>。</p><p>因此根据距离不同，太阳附近存在着<a href="https://baike.baidu.com/item/%E5%AE%9C%E5%B1%85%E5%B8%A6" target="_blank" rel="noopener">宜居带</a>，也就是<strong>下图</strong>中绿色的部分。颜色偏红的区域温度偏高，处于该范围内的行星表面温度过高，甚至无法保留液态水，另一方面太阳的恒星活动例如太阳风可能会吹走这些行星的大气，导致大气稀薄；颜色偏蓝的区域则是温度偏低，来自远处太阳的辐射偏少，难以维持有机物的活性，生物亦难以存活。</p><!-- <body>    <img src='http://xu-s-image.test.upcdn.net/solarhabitate.png' width = "500" height = "300" style="zoom:50%"><img src='http://xu-s-image.test.upcdn.net/solarhabitate.png' width = "500" height = "300" style="zoom:50%"><script src="/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05"></script><script>L2Dwidget.init({"pluginRootPath":"live2dw/","pluginJsPath":"lib/","pluginModelPath":"assets/","tagMode":false,"debug":false,"model":{"jsonPath":"/live2dw/assets/shizuku.model.json"},"display":{"position":"left","width":175,"height":350},"mobile":{"show":false},"log":false});</script></body> --><!-- <table>    <tr>        <td><img src='http://xu-s-image.test.upcdn.net/solarhabitate.png' width = "500" height = "300"></td>        <td><img src='http://xu-s-image.test.upcdn.net/solarhabitate.png' width = "500" height = "300"></td>    </tr></table> --><p><img src='http://xu-s-image.test.upcdn.net/solarhabitate.png' width = "600" height = "350"></p><p>可以看到，地球和火星是唯一的两颗位于宜居带的行星，因此这两颗行星也是最可能存在并维持生命的。但是根据目前人们所了解到的，火星存在生命的可能性很低，最令人信服的一种说法是，火星的内核因为某种原因冷却了，即原本高速旋转以提供磁场的铁核不再旋转并且冷却下来，使得火星失去了磁场。要知道，在太阳附近失去了磁场就意味着失去了一层保护，来自太阳的高能粒子很快吹散了火星的大气，而火星的昼夜温差也因为没有大气的逆辐射而出奇的大，在这样的行星生活的可能也只有想<a href="https://movie.douban.com/subject/26718838/" target="_blank" rel="noopener">异星觉醒</a>里面的超强生命力的生物了吧。</p><h3 id="带着太阳一起逃离">带着太阳一起逃离</h3><p>试想一下，如果有一天我们不得不去另一个地方寻找家园，比如某天叶文洁偷偷把地球的宇宙坐标发出去了，那么在无法正面取胜的情况下，可能只能逃逸太阳系的原坐标。我们有过流浪地球，因为太阳即将提前达到它的红巨星期，巨大的热浪将会席卷整个内太阳系，但是如果我们只是单纯带着地球逃离，我们必须面临着长达数百年的冰封时期，我们需要储存大量物资，甚至仍然不够。如果能够带着太阳一起逃逸，并且维持日地系统，这一切问题均可以解决。因此，我们不如带着太阳一起逃离。</p><p>但是具体如何操控太阳运动，我们这里不做任何的描述和模拟，因为<del>我也不知道</del>目前还没有可行的方案，但是不如做一个小科幻，想象一下人类已经掌控了实时改变太阳速度的能力。我们下面要做的是，仅仅只操纵太阳的运动，如何带着它的<del>小跟班萌</del>行星们离开原来的位置。</p><p><img src="https://s1.ax1x.com/2020/03/27/GCzzqK.png" width="600" height="350"></p><p>从上面这张图我们可以看到，当太阳有了一定的相对于太阳系中心的速度时，就开始逃离了原轨道，整个太阳系出现巨大的混乱，我们没办法在只操控太阳的情况下，把所有的天体都带走，所以我们仅仅带着地球出逃，即仅保留日地系统。 调整太阳的速度是有讲究的，我们需要在恰当的时候给予太阳加速度，从而保证地球的轨道始终是距离太阳<span class="math inline">\(1AU\)</span>的距离，从而使得地球上的生灵可以在地表正常的生活，而不需要躲在地下城里。</p><p><img src="https://s1.ax1x.com/2020/03/27/GPSAxI.png" width='600' height="350"></p><p>在保留日地系统的情况下，其他的行星也会以一定的速度跟随，但是再也难以追上太阳的速度，因为我们将会在150年间把太阳的速度提高到<span class="math inline">\(2000km/s\)</span>的量级，即便他们的轨道仍旧是可以在太阳刹车之后慢慢追上，但是如果我们要做的事星系尺度上的漫长旅程 最终，行星将会被其他的天体所吸引，而未必能够跟上太阳的脚步。因此，在某种意义上，我们已经抛弃了其他的星系，而仅仅保留了地球和太阳（没错就是这么自私）。如上图，我们看见的唯一个圆形轨道就是日地系统，半径大约为<span class="math inline">\(1AU\)</span>，即太阳和地球原本的距离，因此地球仍然在宜居带中。但是图中可见的其他颜色的轨道则是一些其他太阳系内天体的轨道，他们虽然指向太阳将要运动的方向，但却受到太阳的引力微乎其微，难以在将来和太阳汇合了。</p><p>最终，我们花费约150年的时间，将太阳提速到<span class="math inline">\(2000km/s\)</span>，地球跟随太阳逃向深远的太空。下一站，或许是比邻星...</p><p><img src="https://s1.ax1x.com/2020/03/27/GCzXx1.png" width="600" height="350"></p>]]></content>
      
      
      <categories>
          
          <category> 学习日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Simulation </tag>
            
            <tag> UniverseSandbox </tag>
            
            <tag> Astronomy </tag>
            
            <tag> Solar system </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新增网站底部访问量以及标签美化</title>
      <link href="/2020/03/14/workreview4/"/>
      <url>/2020/03/14/workreview4/</url>
      
        <content type="html"><![CDATA[<h3 id="网站底部访问量">网站底部访问量</h3><blockquote><p>为了显示自己的网站被访问量有多么的<del>多</del>少，我们可以为post的文章加上访问量</p></blockquote><p>添加访问次数和访问量的方法有很多，本文采用的主要是“不蒜子”，“不蒜子”可以直接将访问次数显示在您的网页上</p><p>打开主题的配置文件<code>/theme/next/_config.yml</code>，搜索<code>busuanzi_count</code>就可以进行设置，只需要把<code>enable</code>的值改为<code>true</code>，就可以使用“不算子”进行访问统计了。当然后面的一些设置可以根据个人喜好来设置。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Show PV/UV of the website/page with busuanzi.</span><br><span class="hljs-comment"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span><br><span class="hljs-attr">busuanzi_count:</span><br>  <span class="hljs-comment"># count values only if the other configs are false</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-comment"># custom uv span for the whole site</span><br>  <span class="hljs-attr">site_uv:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">site_uv_header:</span> <span class="hljs-string">访客数</span><br>  <span class="hljs-attr">site_uv_footer:</span> <span class="hljs-string">人</span><br>  <span class="hljs-comment"># custom pv span for the whole site</span><br>  <span class="hljs-attr">site_pv:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">site_pv_header:</span> <span class="hljs-string">总访问量</span><br>  <span class="hljs-attr">site_pv_footer:</span> <span class="hljs-string">次</span><br>  <span class="hljs-comment"># custom pv span for one page only</span><br>  <span class="hljs-attr">page_pv:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">page_pv_header:</span> <span class="hljs-string">&lt;i</span> <span class="hljs-string">class="fa</span> <span class="hljs-string">fa-file-o"&gt;&lt;/i&gt;</span>  <span class="hljs-string">阅读数</span><br>  <span class="hljs-attr">page_pv_footer:</span><br></code></pre></td></tr></table></figure><p>这就设置好啦！</p><p><br></p><h3 id="标签美化">标签美化</h3><blockquote><p>每篇post文章发布之后，都可以在文章最后看见自己的tag标签，但是默认的tag标签采用的是<code>#</code>，并不太好看，我们做如下修改来美化</p></blockquote><p>找到<code>/themes/next/layout/_macro/post.swig</code>文件，搜索<code>rel=&quot;tag&quot;&gt;#</code>，然后将其最后的#修改为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"fa fa-tag"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br></code></pre></td></tr></table></figure><p>其中的<code>fa fa-tag</code>是可以更换的，具体名称见<a href="https://fontawesome.com/icons?d=gallery" target="_blank" rel="noopener">fontawesome</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 工作日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> website </tag>
            
            <tag> Next主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加看板娘以及增加点击特效</title>
      <link href="/2020/03/13/workreview3/"/>
      <url>/2020/03/13/workreview3/</url>
      
        <content type="html"><![CDATA[<h3 id="添加软软看板娘">添加软软看板娘</h3><blockquote><p>Live2d以及其优越性</p></blockquote><p>Live2d is a technique of generating animated 2D graphics, usually anime-style characters, using layered, continuous parts based on a single illustration, without the need of animating frame-by-frame or creating a 3D model. -- Wikiwand</p><p>简单来说，Live2d就是一款可以将二维的图片通过旋转，移动等操作使其呈现出3d效果的技术，因为3d建模非常复杂，一般的网页版面不可能会因为制作一个生动的人物而特意去为其建模，live2d得到广泛的应用。</p><blockquote><p>hexo框架的live2d插件</p></blockquote><p>目前有hexo友<del>大佬</del>已经写好了，并且把源码发到了<a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener">github</a>上，如果需要直接安装，我们只需要在博客根目录下打开<code>git bash</code>然后输入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">npm <span class="hljs-keyword">install</span> <span class="hljs-comment">--save hexo-helper-live2d</span><br></code></pre></td></tr></table></figure><p>便可以直接安装模块。安装之后，在博客的根目录下的配置文件-<code>_config.yml</code>中添加以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">## Live2D</span><br><span class="hljs-comment">## https://github.com/EYHN/hexo-helper-live2d</span><br><span class="hljs-attr">live2d:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-comment"># enable: false</span><br>    <span class="hljs-attr">scriptFrom:</span> <span class="hljs-string">local</span> <span class="hljs-comment"># 默认</span><br>    <span class="hljs-attr">pluginRootPath:</span> <span class="hljs-string">live2dw/</span> <span class="hljs-comment"># 插件在站点上的根目录(相对路径)</span><br>    <span class="hljs-attr">pluginJsPath:</span> <span class="hljs-string">lib/</span> <span class="hljs-comment"># 脚本文件相对与插件根目录路径</span><br>    <span class="hljs-attr">pluginModelPath:</span> <span class="hljs-string">assets/</span> <span class="hljs-comment"># 模型文件相对与插件根目录路径</span><br>  <span class="hljs-comment"># scriptFrom: jsdelivr # jsdelivr CDN</span><br>  <span class="hljs-comment"># scriptFrom: unpkg # unpkg CDN</span><br>  <span class="hljs-comment"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span><br>    <span class="hljs-attr">tagMode:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span><br>    <span class="hljs-attr">debug:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 调试, 是否在控制台输出日志</span><br>    <span class="hljs-attr">model:</span><br>      <span class="hljs-attr">use:</span> <span class="hljs-string">live2d-widget-model-shizuku</span> <span class="hljs-comment"># npm-module package name</span><br>    <span class="hljs-comment"># use: wanko # 博客根目录/live2d_models/ 下的目录名</span><br>    <span class="hljs-comment"># use: ./wives/wanko # 相对于博客根目录的路径</span><br>    <span class="hljs-comment"># use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span><br>    <span class="hljs-attr">display:</span> <span class="hljs-comment"># 模型位置，根据不同的模型自行调整</span><br>      <span class="hljs-attr">position:</span> <span class="hljs-string">left</span><br>      <span class="hljs-attr">width:</span> <span class="hljs-number">225</span><br>      <span class="hljs-attr">height:</span> <span class="hljs-number">450</span><br>    <span class="hljs-attr">mobile:</span> <span class="hljs-comment"># 是否适用于移动端</span><br>      <span class="hljs-attr">show:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p><br></p><blockquote><p>模型</p></blockquote><p>注意，上一段代码中我们只需要关注两点：一是记住<code>enable</code>是live2d这段代码的开关，<code>true</code>表示我们启用这段代码，此后的代码才会生效，如果不想让hexo运行live2d渲染，那就改为<code>false</code>；二是<code>use: live2d-widget-model-shizuku</code>，这里面的<code>live2d-widget-model-shizuku</code>是就是我们的<del>看板娘</del>2d模块的名字，是位于根目录下的<code>/node_modules/</code>中的文件名。最开始默认应该是没有相关的文件的，需要去<a href="https://github.com/xiazeyu/live2d-widget-models" target="_blank" rel="noopener">现有模型的github</a>下载，下载格式为：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">npm <span class="hljs-keyword">install</span> &#123;packagename&#125;<br></code></pre></td></tr></table></figure><p>下载完成后，在<code>/node_modules/</code>下找到相应的<code>live2d-widget-model-{name}</code>文件，拷贝文件名粘贴到<code>use:</code>后面就可以啦，试试看吧。</p><p>我的看板娘的名字是<I>shizuku</I>，喜欢的话直接下载这个<code>live2d-widget-model-shizuku</code>就可以喔。</p><p><br></p><p><br></p><h3 id="增加点击爱心特效">增加点击爱心特效</h3><blockquote><p>添加了软软看板娘之后我们需要找到一个符合她气质的鼠标点击特效，比如本博客使用的<B>爱心点击</B>特效，这样你点击萌萌的软软之后就能出现小爱心</p></blockquote><p>在<code>/theme/next/source/js/src</code>路径下新建一个javascript的文件<code>clicklove.js</code>，其中写入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/*网页鼠标点击特效（爱心）*/</span><br>!<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e, t, a</span>) </span>&#123;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">r</span>(<span class="hljs-params"></span>) </span>&#123;<span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> e = <span class="hljs-number">0</span>; e &lt; s.length; e++) s[e].alpha &lt;= <span class="hljs-number">0</span> ? (t.body.removeChild(s[e].el), s.splice(e, <span class="hljs-number">1</span>)) : (s[e].y--, s[e].scale += <span class="hljs-number">.004</span>, s[e].alpha -= <span class="hljs-number">.013</span>, s[e].el.style.cssText = <span class="hljs-string">"left:"</span> + s[e].x + <span class="hljs-string">"px;top:"</span> + s[e].y + <span class="hljs-string">"px;opacity:"</span> + s[e].alpha + <span class="hljs-string">";transform:scale("</span> + s[e].scale + <span class="hljs-string">","</span> + s[e].scale + <span class="hljs-string">") rotate(45deg);background:"</span> + s[e].color + <span class="hljs-string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">n</span>(<span class="hljs-params"></span>) </span>&#123;<span class="hljs-keyword">var</span> t = <span class="hljs-string">"function"</span> == <span class="hljs-keyword">typeof</span> e.onclick &amp;&amp; e.onclick;e.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;t &amp;&amp; t(), o(e)&#125;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">o</span>(<span class="hljs-params">e</span>) </span>&#123;<span class="hljs-keyword">var</span> a = t.createElement(<span class="hljs-string">"div"</span>);a.className = <span class="hljs-string">"heart"</span>, s.push(&#123;<span class="hljs-attr">el</span>: a,<span class="hljs-attr">x</span>: e.clientX - <span class="hljs-number">5</span>,<span class="hljs-attr">y</span>: e.clientY - <span class="hljs-number">5</span>,<span class="hljs-attr">scale</span>: <span class="hljs-number">1</span>,<span class="hljs-attr">alpha</span>: <span class="hljs-number">1</span>,<span class="hljs-attr">color</span>: c()&#125;), t.body.appendChild(a)&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">i</span>(<span class="hljs-params">e</span>) </span>&#123;<span class="hljs-keyword">var</span> a = t.createElement(<span class="hljs-string">"style"</span>);a.type = <span class="hljs-string">"text/css"</span>;<span class="hljs-keyword">try</span> &#123;a.appendChild(t.createTextNode(e))&#125; <span class="hljs-keyword">catch</span> (t) &#123;a.styleSheet.cssText = e&#125;t.getElementsByTagName(<span class="hljs-string">"head"</span>)[<span class="hljs-number">0</span>].appendChild(a)&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">c</span>(<span class="hljs-params"></span>) </span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-string">"rgb("</span> + ~~(<span class="hljs-number">255</span> * <span class="hljs-built_in">Math</span>.random()) + <span class="hljs-string">","</span> + ~~(<span class="hljs-number">255</span> * <span class="hljs-built_in">Math</span>.random()) + <span class="hljs-string">","</span> + ~~(<span class="hljs-number">255</span> * <span class="hljs-built_in">Math</span>.random()) + <span class="hljs-string">")"</span>&#125;<span class="hljs-keyword">var</span> s = [];e.requestAnimationFrame = e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;setTimeout(e, <span class="hljs-number">1e3</span> / <span class="hljs-number">60</span>)&#125;, i(<span class="hljs-string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>), n(), r()&#125;(<span class="hljs-built_in">window</span>, <span class="hljs-built_in">document</span>);<br></code></pre></td></tr></table></figure><p>然后再打开<code>\themes\next\layout\_layout.swig</code>文件，在<code>&lt;body&gt;&lt;/body&gt;</code>体内的最后加上一句</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"/js/src/clicklove.js"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p>然后重制一下hexo试试看吧！</p>]]></content>
      
      
      <categories>
          
          <category> 工作日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> website </tag>
            
            <tag> Next主题 </tag>
            
            <tag> workview </tag>
            
            <tag> live2d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Paper update</title>
      <link href="/2020/03/11/Mypaper/"/>
      <url>/2020/03/11/Mypaper/</url>
      
        <content type="html"><![CDATA[<center>Planck Galactic Cold Clumps (PGCCs) at High Latitude</center><p><br></p><center>Here we show the latest version of my paper</center><div class="row">    <embed src="./Paper_fengwei.pdf" width="100%" height="550" type="application/pdf"></div><p><br></p><center>Here we show the weekly report of group meeting</center><div class="row">    <embed src="./Weeklyreport.pdf" width="100%" height="550" type="application/pdf"></div><p><br></p>]]></content>
      
      
      <categories>
          
          <category> 个人研究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> research </tag>
            
            <tag> paper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新增搜索引擎和评论</title>
      <link href="/2020/03/09/workreview2/"/>
      <url>/2020/03/09/workreview2/</url>
      
        <content type="html"><![CDATA[<h3 id="新增本地搜索引擎">新增本地搜索引擎</h3><blockquote><p>内容参考博主<strong>Yaya</strong>的<a href="https://yashuning.github.io/2018/06/29/hexo-Next-%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/" target="_blank" rel="noopener">hexo - Next 主题添加搜索功能</a>，该方法要求Next的主题版本至少在5.1.0</p></blockquote><p>首先安装插件 <code>hexo-generator-searchdb</code>：</p><p>在blog工作目录下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">$ npm <span class="hljs-keyword">install</span> hexo-generator-searchdb <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p>然后来配置根目录下的 <code>_config.yml</code> 文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">search:</span><br>     <span class="hljs-attr">path:</span> <span class="hljs-string">search.xml</span><br>     <span class="hljs-attr">field:</span> <span class="hljs-string">post</span><br>     <span class="hljs-attr">format:</span> <span class="hljs-string">html</span><br>     <span class="hljs-attr">limit:</span> <span class="hljs-number">10000</span><br></code></pre></td></tr></table></figure><p>最后配置主题的 <code>_config.yml</code> 文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Local search</span><br>   <span class="hljs-attr">local_search:</span><br>     <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p><br></p><h3 id="新增评论板块">新增评论板块</h3><blockquote><p>内容参考博主<strong>Yaya</strong>的<a href="https://yashuning.github.io/2018/06/29/hexo-Next-%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/" target="_blank" rel="noopener">hexo - Next 主题添加评论功能</a>，下面主要以valine评论系统进行演示。</p></blockquote><p>首先我们需要在<a href="https://www.leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>注册一个账号，进入控制台，然后添加新的一个App，选择<del>免费</del>developer模式，然后创建。点开App项目（我的App名字叫comment，如下图）之后，选择左侧项目栏的App keys，保存AppID与AppKey备用</p><p><img src='http://i1.fuimg.com/712030/0dc6a62fe31bc889.png' width = "500" height = "300"></p><p>选择主题文件下的_config.yml文件，然后搜索valine板块，将刚刚保存的AppID与AppKey填入</p><p><img src='http://i2.tiimg.com/712030/861d86350d05de15.png' width = "500" height = "300"></p><p>重新部署hexo，依次输入：</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>hexo clean<br><span class="hljs-variable">$ </span>hexo g <span class="hljs-comment"># generate</span><br><span class="hljs-variable">$ </span>hexo d <span class="hljs-comment"># deploy</span><br></code></pre></td></tr></table></figure><p>完成！</p><p><br></p><blockquote><p>补充：自己犯的一个小错导致浪费了一下午的时间，希望大家可以注意</p></blockquote><p><code>themes/next/layout/_layout.swig</code>这个文件就是主题框架的一个脚本文件，一定慎重修改，我就是不小心duplicate其中的一句话，</p><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sml">&#123; % <span class="hljs-keyword">include</span> <span class="hljs-symbol">'third</span>-party/comments/index.swig' % &#125;<br></code></pre></td></tr></table></figure><p>导致Next主题下我的评论版所有的评论都渲染了两次，但是一直都找不到原因，没想到是在这里出了问题。</p><p>另外这边也启发我_layout.swig文件是next主题的布局文件，之后可以多关注这个文件。</p>]]></content>
      
      
      <categories>
          
          <category> 工作日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> website </tag>
            
            <tag> workreview </tag>
            
            <tag> LeanCloud </tag>
            
            <tag> Next主题 </tag>
            
            <tag> valine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建站与绑定域名</title>
      <link href="/2020/03/09/workreview1/"/>
      <url>/2020/03/09/workreview1/</url>
      
        <content type="html"><![CDATA[<h3 id="安装hexo">安装hexo</h3><blockquote><p>内容基本参考Bruce的<a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="noopener">Hexo你的博客</a>。</p></blockquote><p><br></p><h3 id="绑定域名">绑定域名</h3><blockquote><p>该内容来参考<strong>掘金</strong>的博主：<a href="https://juejin.im/post/5c0380a86fb9a049ff4ddd74" target="_blank" rel="noopener">橘子味汽水</a>的答案</p></blockquote><p>我们已经利用<strong>hexo</strong>在<strong>Github</strong>上搭建了静态博客，但是我们每次都只能通过<a href="xfengwei.github.io" class="uri">xfengwei.github.io</a>(即进入个人Github的repository)来完成登陆网站。但问题在于，首先输入这个网页的名字总是繁琐的，不仅是很多不了解<strong>Github</strong>的人可能会输入错误，同时这个名字并不美观，也没办法自定义，所以我们想到通过绑定自己注册的个性化域名来达到目的。国内主流的域名代理厂商一般就是阿里云和腾讯云。</p><p>下面演示的是<a href="https://www.aliyun.com" target="_blank" rel="noopener">阿里云</a>的操作流程：注册账号并且花钱购买一个个人的域名之后，官网右上角点击进入管理控制台，在域名列表选择你所需要的个性化域名并且点击右侧的“解析设置”如下图</p><p><img src='http://i2.tiimg.com/712030/6f96fbcac601d481.png' width = "500" height = "300"></p><p>点击“新手引导”，并将你github厂库的ping输入其中，点击确定</p><p><img src='http://i1.fuimg.com/712030/ecd535829b95236e.png' width = "500" height = "300"></p><p>这里我们自动添加了两条记录，但是有的人是提出要添加三条（但是我试了不太行），这边还是给出<a href="URL" title="https://zhuanlan.zhihu.com/p/26625249">链接</a>作为参考。</p><p>接下来我们打开之前用于导入hexo数据的github厂库，然后点开设置(setting)下滑至custom domain栏目，填写你所注册的个性化域名并保存，例如我的是xiaofengchui.ink</p><p><img src='http://i1.fuimg.com/712030/e7b02b0b550dacb4.png' width = "500" height = "300"></p><p>然后再在你的本地blog/source目录下（这样在重新部署的时候不会被删掉，<code>hexo clean</code> 会将blog文件第一路径下的文件全部更新）新建一个记事本，名为CNAME并且在里面输入你的个性化域名，然后不要保存文件格式。用户打开显示所有文件格式之后，将文件的尾缀（如果有的话）删除即可，这样就不会保存为任何的文件格式了。</p><p>接下来重新部署hexo，依次输入:</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$ </span>hexo clean<br><span class="hljs-variable">$ </span>hexo g <span class="hljs-comment"># generate</span><br><span class="hljs-variable">$ </span>hexo d <span class="hljs-comment"># deploy</span><br></code></pre></td></tr></table></figure><p>完成！</p>]]></content>
      
      
      <categories>
          
          <category> 工作日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> website </tag>
            
            <tag> workreview </tag>
            
            <tag> LeanCloud </tag>
            
            <tag> hexo的安装 </tag>
            
            <tag> 绑定域名 </tag>
            
            <tag> Next主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Today&#39;s trip of hexo and my first feelings (Hexo的第一课与初印象)</title>
      <link href="/2020/03/08/First-feeling-of-hexo/"/>
      <url>/2020/03/08/First-feeling-of-hexo/</url>
      
        <content type="html"><![CDATA[<h3 id="because-of-luck-源于缘分">Because of Luck (源于缘分)</h3><p>Never imagine that I would meet with such a great frame to build my first website--<strong>Hexo</strong>. I can only appreciate the luckiness because it's just an incident when I looked up something about <span class="math inline">\(\LaTeX\)</span> and beamer to finish my weekly report of the research. And suddenly I came up with an idea that maybe I should update my research daily. The best choice is to build a website and write my own blog, and it is why this website blog exists. I will try update the blog as often as possible to record my life and work in case that I might forget some of them. It's a kind of back-up and repository, which really gives me sense of security.</p><blockquote><p>过去我肯定想象不到我会遇见如此棒的框架来搭建我自己的第一个网页，它就是<strong>Hexo</strong>。我只能说非常感谢自己的运气了，因为这实在是个意外。我本来只是想查看一些关于<span class="math inline">\(\LaTeX\)</span>和beamer的资料来美化我每周的研究报告，然后就突然想到如果我有如此频繁的记录的需要，或许我应该采用更加容易展示的，并且更赏心悦目的方式来呈现，那么最好的选择就是去建一个自己的网站，写自己的博客。我会尽可能及时地更新我的博客，记录我的生活也好，工作进展也好，以防我可能会忘记。这种形式的备份真的能够给我充分的安全感。</p></blockquote><p>I am really a freshman for building website and I know there is a long way to go: learing Hypertext Markup Language(html) and CSS to optimize my website/blog and cultivate my skills. I can't wait any longer to start and I hope that I can keep calm and carry on.</p><blockquote><p>对于建网站我实在是一窍不通，显然有很长的路要走，包括学习html和CSS来优化我的网页/博客，培养我的一些专业技巧。迫不及待了，我得坚持并且一直努力把网站经营好！</p></blockquote><center>This is me and I love to travel (爱旅行的我).</center><p><img src='https://s1.ax1x.com/2020/03/27/GC8eJJ.jpg'></p><h3 id="to-be-continue-未完待续">To Be Continue (未完待续)</h3>]]></content>
      
      
      <categories>
          
          <category> 个人随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> website </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
