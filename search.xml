<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>新增网站底部访问量以及标签美化</title>
      <link href="/2020/03/14/workreview4/"/>
      <url>/2020/03/14/workreview4/</url>
      
        <content type="html"><![CDATA[<h3 id="网站底部访问量">网站底部访问量</h3><blockquote><p>为了显示自己的网站被访问量有多么的<del>多</del>少，我们可以为post的文章加上访问量</p></blockquote><p>添加访问次数和访问量的方法有很多，本文采用的主要是“不蒜子”，“不蒜子”可以直接将访问次数显示在您的网页上</p><p>打开主题的配置文件<code>/theme/next/_config.yml</code>，搜索<code>busuanzi_count</code>就可以进行设置，只需要把<code>enable</code>的值改为<code>true</code>，就可以使用“不算子”进行访问统计了。当然后面的一些设置可以根据个人喜好来设置。</p><pre><code># Show PV/UV of the website/page with busuanzi.# Get more information on http://ibruce.info/2015/04/04/busuanzi/busuanzi_count:  # count values only if the other configs are false  enable: true  # custom uv span for the whole site  site_uv: true  site_uv_header: 访客数  site_uv_footer: 人  # custom pv span for the whole site  site_pv: true  site_pv_header: 总访问量  site_pv_footer: 次  # custom pv span for one page only  page_pv: true  page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt;  阅读数  page_pv_footer:</code></pre><p>这就设置好啦！</p><p><br></p><h3 id="标签美化">标签美化</h3><blockquote><p>每篇post文章发布之后，都可以在文章最后看见自己的tag标签，但是默认的tag标签采用的是<code>#</code>，并不太好看，我们做如下修改来美化</p></blockquote><p>找到<code>/themes/next/layout/_macro/post.swig</code>文件，搜索<code>rel=&quot;tag&quot;&gt;#</code>，然后将其最后的#修改为</p><pre><code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></pre><p>其中的<code>fa fa-tag</code>是可以更换的，具体名称见<a href="https://fontawesome.com/icons?d=gallery" target="_blank" rel="noopener">fontawesome</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 工作日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> website </tag>
            
            <tag> Next主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加看板娘以及增加点击特效</title>
      <link href="/2020/03/13/workreview3/"/>
      <url>/2020/03/13/workreview3/</url>
      
        <content type="html"><![CDATA[<h3 id="添加软软看板娘">添加软软看板娘</h3><blockquote><p>Live2d以及其优越性</p></blockquote><p>Live2d is a technique of generating animated 2D graphics, usually anime-style characters, using layered, continuous parts based on a single illustration, without the need of animating frame-by-frame or creating a 3D model. -- Wikiwand</p><p>简单来说，Live2d就是一款可以将二维的图片通过旋转，移动等操作使其呈现出3d效果的技术，因为3d建模非常复杂，一般的网页版面不可能会因为制作一个生动的人物而特意去为其建模，live2d得到广泛的应用。</p><blockquote><p>hexo框架的live2d插件</p></blockquote><p>目前有hexo友<del>大佬</del>已经写好了，并且把源码发到了<a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener">github</a>上，如果需要直接安装，我们只需要在博客根目录下打开<code>git bash</code>然后输入</p><pre><code>npm install --save hexo-helper-live2d</code></pre><p>便可以直接安装模块。安装之后，在博客的根目录下的配置文件-<code>_config.yml</code>中添加以下内容：</p><pre><code>## Live2D## https://github.com/EYHN/hexo-helper-live2dlive2d:    enable: true  # enable: false    scriptFrom: local # 默认    pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径)    pluginJsPath: lib/ # 脚本文件相对与插件根目录路径    pluginModelPath: assets/ # 模型文件相对与插件根目录路径  # scriptFrom: jsdelivr # jsdelivr CDN  # scriptFrom: unpkg # unpkg CDN  # scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url    tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中    debug: false # 调试, 是否在控制台输出日志    model:      use: live2d-widget-model-shizuku # npm-module package name    # use: wanko # 博客根目录/live2d_models/ 下的目录名    # use: ./wives/wanko # 相对于博客根目录的路径    # use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url    display: # 模型位置，根据不同的模型自行调整      position: left      width: 225      height: 450    mobile: # 是否适用于移动端      show: true</code></pre><blockquote><p>模型</p></blockquote><p>注意，上一段代码中我们只需要关注两点：一是记住<code>enable</code>是live2d这段代码的开关，<code>true</code>表示我们启用这段代码，此后的代码才会生效，如果不想让hexo运行live2d渲染，那就改为<code>false</code>；二是<code>use: live2d-widget-model-shizuku</code>，这里面的<code>live2d-widget-model-shizuku</code>是就是我们的<del>看板娘</del>2d模块的名字，是位于根目录下的<code>/node_modules/</code>中的文件名。最开始默认应该是没有相关的文件的，需要去<a href="https://github.com/xiazeyu/live2d-widget-models" target="_blank" rel="noopener">现有模型的github</a>下载，下载格式为：</p><pre><code>npm install {packagename}</code></pre><p>下载完成后，在<code>/node_modules/</code>下找到相应的<code>live2d-widget-model-{name}</code>文件，拷贝文件名粘贴到<code>use:</code>后面就可以啦，试试看吧。</p><p>我的看板娘的名字是<I>shizuku</I>，喜欢的话直接下载这个<code>live2d-widget-model-shizuku</code>就可以喔。</p><p><br></p><p><br></p><h3 id="增加点击爱心特效">增加点击爱心特效</h3><blockquote><p>添加了软软看板娘之后我们需要找到一个符合她气质的鼠标点击特效，比如本博客使用的<B>爱心点击</B>特效，这样你点击萌萌的软软之后就能出现小爱心</p></blockquote><p>在<code>/theme/next/source/js/src</code>路径下新建一个javascript的文件<code>clicklove.js</code>，其中写入</p><pre><code>/*网页鼠标点击特效（爱心）*/!function (e, t, a) {function r() {for (var e = 0; e &lt; s.length; e++) s[e].alpha &lt;= 0 ? (t.body.removeChild(s[e].el), s.splice(e, 1)) : (s[e].y--, s[e].scale += .004, s[e].alpha -= .013, s[e].el.style.cssText = &quot;left:&quot; + s[e].x + &quot;px;top:&quot; + s[e].y + &quot;px;opacity:&quot; + s[e].alpha + &quot;;transform:scale(&quot; + s[e].scale + &quot;,&quot; + s[e].scale + &quot;) rotate(45deg);background:&quot; + s[e].color + &quot;;z-index:99999&quot;);requestAnimationFrame(r)}function n() {var t = &quot;function&quot; == typeof e.onclick &amp;&amp; e.onclick;e.onclick = function (e) {t &amp;&amp; t(), o(e)}}function o(e) {var a = t.createElement(&quot;div&quot;);a.className = &quot;heart&quot;, s.push({el: a,x: e.clientX - 5,y: e.clientY - 5,scale: 1,alpha: 1,color: c()}), t.body.appendChild(a)}function i(e) {var a = t.createElement(&quot;style&quot;);a.type = &quot;text/css&quot;;try {a.appendChild(t.createTextNode(e))} catch (t) {a.styleSheet.cssText = e}t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)}function c() {return &quot;rgb(&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;,&quot; + ~~(255 * Math.random()) + &quot;)&quot;}var s = [];e.requestAnimationFrame = e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function (e) {setTimeout(e, 1e3 / 60)}, i(&quot;.heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: &#39;&#39;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}&quot;), n(), r()}(window, document);</code></pre><p>然后再打开<code>\themes\next\layout\_layout.swig</code>文件，在<code>&lt;body&gt;&lt;/body&gt;</code>体内的最后加上一句</p><pre><code>&lt;!-- 页面点击小红心 --&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clicklove.js&quot;&gt;&lt;/script&gt;</code></pre><p>然后重制一下hexo试试看吧！</p>]]></content>
      
      
      <categories>
          
          <category> 工作日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> website </tag>
            
            <tag> Next主题 </tag>
            
            <tag> workview </tag>
            
            <tag> live2d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Paper update</title>
      <link href="/2020/03/11/Mypaper/"/>
      <url>/2020/03/11/Mypaper/</url>
      
        <content type="html"><![CDATA[<center>Planck Galactic Cold Clumps (PGCCs) at High Latitude</center><p><br></p><center>Here we show the latest version of my paper</center><div class="row">    <embed src="./Paper_fengwei.pdf" width="100%" height="550" type="application/pdf"></div><p><br></p><center>Here we show the weekly report of group meeting</center><div class="row">    <embed src="./beamer.pdf" width="100%" height="550" type="application/pdf"></div><p><br></p>]]></content>
      
      
      <categories>
          
          <category> 个人研究 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> research </tag>
            
            <tag> paper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新增搜索引擎和评论</title>
      <link href="/2020/03/09/workreview2/"/>
      <url>/2020/03/09/workreview2/</url>
      
        <content type="html"><![CDATA[<h3 id="新增本地搜索引擎">新增本地搜索引擎</h3><blockquote><p>内容参考博主<strong>Yaya</strong>的<a href="https://yashuning.github.io/2018/06/29/hexo-Next-%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/" target="_blank" rel="noopener">hexo - Next 主题添加搜索功能</a>，该方法要求Next的主题版本至少在5.1.0</p></blockquote><p>首先安装插件 <code>hexo-generator-searchdb</code>：</p><p>在blog工作目录下：</p><pre><code>$ npm install hexo-generator-searchdb --save</code></pre><p>然后来配置根目录下的 <code>_config.yml</code> 文件：</p><pre><code>search:  path: search.xml  field: post  format: html  limit: 10000</code></pre><p>最后配置主题的 <code>_config.yml</code> 文件：</p><pre><code># Local searchlocal_search:  enable: true</code></pre><p><br></p><h3 id="新增评论板块">新增评论板块</h3><blockquote><p>内容参考博主<strong>Yaya</strong>的<a href="https://yashuning.github.io/2018/06/29/hexo-Next-%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/" target="_blank" rel="noopener">hexo - Next 主题添加评论功能</a>，下面主要以valine评论系统进行演示。</p></blockquote><p>首先我们需要在<a href="https://www.leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>注册一个账号，进入控制台，然后添加新的一个App，选择<del>免费</del>developer模式，然后创建。点开App项目（我的App名字叫comment，如下图）之后，选择左侧项目栏的App keys，保存AppID与AppKey备用</p><p><img src='http://i1.fuimg.com/712030/0dc6a62fe31bc889.png' width = "500" height = "300"></p><p>选择主题文件下的_config.yml文件，然后搜索valine板块，将刚刚保存的AppID与AppKey填入</p><p><img src='http://i2.tiimg.com/712030/861d86350d05de15.png' width = "500" height = "300"></p><p>重新部署hexo，依次输入：</p><pre><code>$ hexo clean$ hexo g # generate$ hexo d # deploy</code></pre><p>完成！</p><p><br></p><blockquote><p>补充：自己犯的一个小错导致浪费了一下午的时间，希望大家可以注意</p></blockquote><p><code>themes/next/layout/_layout.swig</code> 这个文件就是主题框架的一个脚本文件，一定慎重修改，我就是不小心duplicate其中的一句话，</p><pre><code>{% include '_third-party/comments/index.swig' %}</code></pre><p>导致Next主题下我的评论版所有的评论都渲染了两次，但是一直都找不到原因，没想到是在这里出了问题。</p><p>另外这边也启发我_layout.swig文件是next主题的布局文件，之后可以多关注这个文件。</p>]]></content>
      
      
      <categories>
          
          <category> 工作日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> website </tag>
            
            <tag> Next主题 </tag>
            
            <tag> workreview </tag>
            
            <tag> LeanCloud </tag>
            
            <tag> valine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建站与绑定域名</title>
      <link href="/2020/03/09/workreview1/"/>
      <url>/2020/03/09/workreview1/</url>
      
        <content type="html"><![CDATA[<h3 id="安装hexo">安装hexo</h3><blockquote><p>内容基本参考Bruce的<a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="noopener">Hexo你的博客</a>。</p></blockquote><p><br></p><h3 id="绑定域名">绑定域名</h3><blockquote><p>该内容来参考<strong>掘金</strong>的博主：<a href="https://juejin.im/post/5c0380a86fb9a049ff4ddd74" target="_blank" rel="noopener">橘子味汽水</a>的答案</p></blockquote><p>我们已经利用<strong>hexo</strong>在<strong>Github</strong>上搭建了静态博客，但是我们每次都只能通过<a href="xfengwei.github.io" class="uri">xfengwei.github.io</a>(即进入个人Github的repository)来完成登陆网站。但问题在于，首先输入这个网页的名字总是繁琐的，不仅是很多不了解<strong>Github</strong>的人可能会输入错误，同时这个名字并不美观，也没办法自定义，所以我们想到通过绑定自己注册的个性化域名来达到目的。国内主流的域名代理厂商一般就是阿里云和腾讯云。</p><p>下面演示的是<a href="https://www.aliyun.com" target="_blank" rel="noopener">阿里云</a>的操作流程：注册账号并且花钱购买一个个人的域名之后，官网右上角点击进入管理控制台，在域名列表选择你所需要的个性化域名并且点击右侧的“解析设置”如下图</p><p><img src='http://i2.tiimg.com/712030/6f96fbcac601d481.png' width = "500" height = "300"></p><p>点击“新手引导”，并将你github厂库的ping输入其中，点击确定</p><p><img src='http://i1.fuimg.com/712030/ecd535829b95236e.png' width = "500" height = "300"></p><p>这里我们自动添加了两条记录，但是有的人是提出要添加三条（但是我试了不太行），这边还是给出<a href="URL" title="https://zhuanlan.zhihu.com/p/26625249">链接</a>作为参考。</p><p>接下来我们打开之前用于导入hexo数据的github厂库，然后点开设置(setting)下滑至custom domain栏目，填写你所注册的个性化域名并保存，例如我的是xiaofengchui.ink</p><p><img src='http://i1.fuimg.com/712030/e7b02b0b550dacb4.png' width = "500" height = "300"></p><p>然后再在你的本地blog/source目录下（这样在重新部署的时候不会被删掉，<code>hexo clean</code> 会将blog文件第一路径下的文件全部更新）新建一个记事本，名为CNAME并且在里面输入你的个性化域名，然后不要保存文件格式。用户打开显示所有文件格式之后，将文件的尾缀（如果有的话）删除即可，这样就不会保存为任何的文件格式了。</p><p>接下来重新部署hexo，依次输入:</p><pre><code>$ hexo clean$ hexo g # generate$ hexo d # deploy</code></pre><p>完成！</p>]]></content>
      
      
      <categories>
          
          <category> 工作日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> website </tag>
            
            <tag> Next主题 </tag>
            
            <tag> workreview </tag>
            
            <tag> LeanCloud </tag>
            
            <tag> hexo的安装 </tag>
            
            <tag> 绑定域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Today&#39;s trip of hexo and my first feelings (Hexo的第一课与初印象)</title>
      <link href="/2020/03/08/First-feeling-of-hexo/"/>
      <url>/2020/03/08/First-feeling-of-hexo/</url>
      
        <content type="html"><![CDATA[<h3 id="because-of-luck-源于缘分">Because of Luck (源于缘分)</h3><p>Never imagine that I would meet with such a great frame to build my first website--<strong>Hexo</strong>. I can only appreciate the luckiness because it's just an incident when I looked up something about <span class="math inline">\(\LaTeX\)</span> and beamer to finish my weekly report of the research. And suddenly I came up with an idea that maybe I should update my research daily. The best choice is to build a website and write my own blog, and it is why this website blog exists. I will try update the blog as often as possible to record my life and work in case that I might forget some of them. It's a kind of back-up and repository, which really gives me sense of security.</p><blockquote><p>过去我肯定想象不到我会遇见如此棒的框架来搭建我自己的第一个网页，它就是<strong>Hexo</strong>。我只能说非常感谢自己的运气了，因为这实在是个意外。我本来只是想查看一些关于<span class="math inline">\(\LaTeX\)</span>和beamer的资料来美化我每周的研究报告，然后就突然想到如果我有如此频繁的记录的需要，或许我应该采用更加容易展示的，并且更赏心悦目的方式来呈现，那么最好的选择就是去建一个自己的网站，写自己的博客。我会尽可能及时地更新我的博客，记录我的生活也好，工作进展也好，以防我可能会忘记。这种形式的备份真的能够给我充分的安全感。</p></blockquote><p>I am really a freshman for building website and I know there is a long way to go: learing Hypertext Markup Language(html) and CSS to optimize my website/blog and cultivate my skills. I can't wait any longer to start and I hope that I can keep calm and carry on.</p><blockquote><p>对于建网站我实在是一窍不通，显然有很长的路要走，包括学习html和CSS来优化我的网页/博客，培养我的一些专业技巧。迫不及待了，我得坚持并且一直努力把网站经营好！</p></blockquote><center>This is me and I love to travel (爱旅行的我).</center><p><img src='http://i2.tiimg.com/712030/d78dcade37cac894.jpg'></p><h3 id="to-be-continue-未完待续">To Be Continue (未完待续)</h3>]]></content>
      
      
      <categories>
          
          <category> 个人日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> website </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
